app.post('/api/trigger', async (req, res) => {
  const payload = req.body;
  // Validate and log
  await supabase.from('logs').insert([payload]);
  // Trigger payout
  if (payload.payout_target === 'stripe') { /* Stripe logic */ }
  // Index signal
  await pingSearchConsole(payload.index_url);
  res.status(200).send('Payload routed');
});
const express = require('express');
const bodyParser = require('body-parser');
const { createClient } = require('@supabase/supabase-js');
const axios = require('axios');

const app = express();
app.use(bodyParser.json());

const supabase = createClient('https://your-supabase-url.supabase.co', 'your-supabase-key');

app.post('/api/trigger', async (req, res) => {
  const payload = req.body;

  try {
    // Log to Supabase
    await supabase.from('logs').insert([{
      source: payload.source,
      contributor_id: payload.contributor_id,
      emotion_tag: payload.emotion_tag,
      action: payload.action,
      timestamp: payload.timestamp,
      payout_target: payload.payout_target,
      index_url: payload.index_url
    }]);

    // Trigger payout (example: Coinbase webhook)
    if (payload.payout_target === 'coinbase') {
      await axios.post('https://api.coinbase.com/your-webhook', {
        contributor_id: payload.contributor_id,
        amount: 'auto',
        emotion: payload.emotion_tag
      });
    }

    // Index signal via Search Console
    await axios.post('https://searchconsole.googleapis.com/indexing/v3/urlNotifications:publish', {
      url: payload.index_url,
      type: 'URL_UPDATED'
    }, {
      headers: {
        Authorization: `Bearer your-google-api-token`
      }
    });

    res.status(200).send('Payload routed and executed');
  } catch (error) {
    console.error('Execution error:', error);
    res.status(500).send('Execution failed');
  }
});

app.listen(3000, () => {
  console.log('OracleSignal listener live on port 3000');
});
