function triggerSignal(el) {
  const payload = {
    id: el.dataset.id,
    emotion: el.dataset.emotion,
    affiliate: el.dataset.affiliate,
    contributor: el.dataset.contributor,
    timestamp: Date.now()
  };

  fetch("/webhook/signal", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload)
  });

  window.open(payload.affiliate, "_blank");
}

function triggerUnlock(el) {
  const payload = {
    id: el.dataset.id,
    emotion: el.dataset.emotion,
    unlock: el.dataset.unlock,
    contributor: el.dataset.contributor,
    timestamp: Date.now()
  };

  fetch("/webhook/unlock", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload)
  });

  window.location.href = payload.unlock;
}
function triggerCryptoUnlock(el) {
  const payload = {
    id: el.dataset.id,
    emotion: el.dataset.emotion,
    unlock: el.dataset.unlock,
    contributor: el.dataset.contributor,
    tier: el.dataset.tier,
    timestamp: Date.now()
  };

  fetch("/webhook/crypto-unlock", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload)
  });

  window.location.href = payload.unlock;
}
function triggerOnboarding(el) {
  const payload = {
    tier: el.dataset.tier,
    emotion: el.dataset.emotion,
    unlock: el.dataset.unlock,
    contributor: el.dataset.contributor,
    timestamp: Date.now()
  };

  fetch("/webhook/onboard", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload)
  });

  window.location.href = payload.unlock;
}
function triggerVaultUnlock(el) {
  const payload = {
    vault_id: el.dataset.vault,
    tier: el.dataset.tier,
    emotion: el.dataset.emotion,
    unlock: el.dataset.unlock,
    contributor: el.dataset.contributor,
    timestamp: Date.now()
  };

  fetch("/webhook/vault-unlock", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(payload)
  });

  window.location.href = payload.unlock;
}
